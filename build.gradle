buildscript {
  apply from: rootProject.file("gradle/versions.gradle")

  rootProject.ext.ci = rootProject.hasProperty("ci")

  repositories {
    google()
    maven { url "https://plugins.gradle.org/m2/" }
  }

  dependencies {
    classpath plugs.gradle
    classpath plugs.kotlinGradlePlugin
    classpath plugs.gradleAndroidCommandPlugin
    classpath plugs.playPublisher
    classpath plugs.buildScanPlugin
    classpath plugs.dexcountGradlePlugin
    classpath plugs.gradleAndroidApkSizePlugin
    classpath plugs.coverallsGradlePlugin
    classpath plugs.gradleErrorpronePlugin
    classpath plugs.gradleVersionsPlugin
    classpath plugs.gradleLicensePlugin
  }
}

repositories {
  google()
  jcenter()
}

apply from: rootProject.file("gradle/scan.gradle")
apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt"
apply plugin: "android-command"
apply from: rootProject.file("gradle/compile.gradle")
apply from: rootProject.file("gradle/quality.gradle")
apply from: rootProject.file("gradle/publish.gradle")
apply from: rootProject.file("gradle/wrapper.gradle")
apply plugin: "com.github.triplet.play"
apply plugin: "com.getkeepsafe.dexcount"
apply plugin: "com.vanniktech.android.apk.size"
apply plugin: "net.ltgt.errorprone"
apply plugin: "com.github.ben-manes.versions"
apply plugin: "com.jaredsburrows.license"

android {
  compileSdkVersion rootProject.ext.compileSdkVersion
  buildToolsVersion rootProject.ext.buildToolsVersion

  defaultConfig {
    applicationId "burrows.apps.example.gif"
    versionCode 1
    versionName "1.0"
    minSdkVersion rootProject.ext.ci ? rootProject.ext.minSdkVersion : 21 // Optimize build speed - build with minSdk 21 if using multidex
    targetSdkVersion rootProject.ext.targetSdkVersion
    testApplicationId "burrows.apps.example.gif.test"
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    resConfigs "en"                                                       // Optimize APK size - keep only english resource files for now
    vectorDrawables.useSupportLibrary = true                              // Optimize APK size - use vector drawables
  }

  dataBinding {
    enabled = true
    enabledForTests = true
  }

  compileOptions {
    sourceCompatibility rootProject.ext.sourceCompatibilityVersion
    targetCompatibility rootProject.ext.sourceCompatibilityVersion
  }

  // Optimize local build speed - disable aapt PNG crunching
  aaptOptions {
    cruncherEnabled rootProject.ext.ci
  }

  // Optimize ci build speed - disable dexing on ci
  dexOptions {
    preDexLibraries !rootProject.ext.ci
  }

  // Add Kotlin source sets - shouldn't "kotlin-android" be doing this for us?
  sourceSets {
    androidTest.java.srcDirs += "src/androidTest/kotlin"
    debug.java.srcDirs += "src/debug/kotlin"
    main.java.srcDirs += "src/main/kotlin"
    test.java.srcDirs += "src/test/kotlin"
  }

  lintOptions {
    textReport true
    textOutput "stdout"
    checkAllWarnings true
    warningsAsErrors true
    disable "UnusedResources"              // Unused will be removed on release
    disable "IconExpectedSize"             // Using the material icons provided from Google
    disable "GoogleAppIndexingApiWarning"  // We might want to index our app later
    disable "InvalidPackage"               // Butterknife, Okio and Realm
    disable "ResourceType"                 // Annotation binding
    disable "GradleDependency"
    disable "NewerVersionAvailable"
  }

  // Add "debug.keystore" so developers can share APKs with same signatures locally
  signingConfigs {
    debug {
      storeFile rootProject.file("config/signing/debug.keystore")
      storePassword rootProject.ext.debugKeystorePass
      keyAlias rootProject.ext.debugKeystoreUser
      keyPassword rootProject.ext.debugKeystorePass
    }
  }

  buildTypes {
    debug {
      if (rootProject.ext.ci) testCoverageEnabled true                          // https://issuetracker.google.com/issues/37019591
      applicationIdSuffix ".debug"
    }

    // Apply fake signing config to release to test "assembleRelease" locally
    release {
      minifyEnabled true                                                        // Optimize APK size - remove/optimize DEX file(s)
      shrinkResources true                                                      // Optimize APK size - remove unused resources
      proguardFile getDefaultProguardFile("proguard-android-optimize.txt")      // Optimize APK size - use optimized proguard rules
      proguardFile rootProject.file("config/proguard/proguard-rules.txt")
      signingConfig signingConfigs.debug
    }
  }

  testOptions {
    animationsDisabled = true
    unitTests {
      returnDefaultValues = true
      all {
        jacoco {
          includeNoLocationClasses = true
        }
      }
    }
  }

  // Optimize APK size - remove excess files in the manifest and APK
  packagingOptions {
    exclude "/META-INF/*.kotlin_module"
    exclude "**/kotlin/**"
    exclude "**/*.txt"
    exclude "**/*.xml"
    exclude "**/*.properties"
  }
}

// Resolves dependency versions across test and production APKs, specifically, transitive
// dependencies. This is required since Espresso internally has a dependency on support-annotations.
configurations.all {
  resolutionStrategy.force "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
}

dependencies {
  // Android/Google
  compile deps.design
  compile deps.cardviewv7
  // Other
  compile deps.kotlinStdlib
  compile deps.okhttp
  compile deps.loggingInterceptor
  compile deps.adapterRxjava2
  compile deps.converterMoshi
  compile deps.moshiAdapters
  compile deps.retrofit
  compile deps.rxAndroid
  compile deps.rxJava
  compile deps.glide
  compile deps.okhttp3Integration
  compile deps.dagger

  kapt deps.daggerCompiler
  kapt deps.compiler

  debugCompile deps.leakcanaryAndroid
  releaseCompile deps.leakcanaryAndroidNoOp

  androidTestCompile deps.junit
  androidTestCompile deps.assertjCore
  androidTestCompile deps.dexmakerMockito, { exclude group: "net.bytebuddy" }
  androidTestCompile deps.runner
  androidTestCompile deps.espressoCore
  androidTestCompile deps.espressoIntents
  androidTestCompile deps.espressoContrib, { exclude group: "com.android.support" }
  androidTestCompile deps.mockwebserver

  kaptAndroidTest deps.daggerCompiler

  testCompile deps.junit
  testCompile deps.assertjCore
  testCompile deps.mockitoCore
  testCompile deps.leakcanaryAndroidNoOp
  testCompile deps.mockwebserver
  testCompile deps.equalsverifier
}
